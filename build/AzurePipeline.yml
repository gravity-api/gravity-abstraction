# https://docs.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=azure-devops&tabs=yaml

name: Gravity.Abstraction.$(Year:yyyy).$(Month).$(DayOfMonth)$(Rev:.r)

pool:
  name: Default

variables:
- group: browserstack.com
- name: 'buildConfiguration'
  value: 'Release'

steps:
- task: UseDotNet@2
  displayName: "Install .NET Core SDK"
  inputs:
    version: 7.x
    performMultiLevelLookup: true
    includePreviewVersions: false

- task: DotNetCoreCLI@2
  displayName: Restore Dependencies
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
    feedsToUse: 'select'
    vstsFeed: '6ed1caf9-de4f-48e8-8276-201533d86a19'
    verbosityRestore: 'Diagnostic'

- task: DotNetCoreCLI@2
  displayName: Build Projects
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- powershell: |
   [xml]$doc = Get-Content $(Build.SourcesDirectory)/test/AzureSettings.runsettings
   $doc.RunSettings.TestRunParameters.ChildNodes.Item(0).value = '$(Grid.Endpoint)'
   $doc.RunSettings.TestRunParameters.ChildNodes.Item(1).value = '$(Grid.BasicAuthorization)'
   $doc.RunSettings.TestRunParameters.ChildNodes.Item(2).value = '$(Build.BuildNumber)'
   $doc.Save("azure-settings-prod.runsettings")
  displayName: create test settings > override with production parameters

- task: DotNetCoreCLI@2
  displayName: Execute Automated Testing
  inputs:
    command: 'test'
    projects: '**/*[Tt]ests/*.csproj'
    arguments: '--configuration $(buildConfiguration) -s azure-settings-prod.runsettings'
    testRunTitle: 'Automation Testing --- $(Build.BuildNumber)'

- powershell: |
   Remove-Item azure-settings-prod.runsettings
  displayName: Cleanup

- task: DotNetCoreCLI@2
  displayName: Create Package
  inputs:
    command: 'pack'
    packagesToPack: '**/!(*[Tt]ests)/*.csproj'
    versioningScheme: 'byBuildNumber'
    verbosityPack: 'Diagnostic'
    packDirectory: $(Build.ArtifactStagingDirectory)

- task: DotNetCoreCLI@2
  displayName: Push Packages
  inputs:
    command: custom
    custom: nuget
    arguments: >
      push $(Build.ArtifactStagingDirectory)/**.nupkg
      -s $(NuGet.Public.Source)
      -k $(NuGet.Public.Key)
      -t 300001

- task: PowerShell@2
  displayName: 'Parse Build Version for GitHub Tag'
  inputs:
    targetType: 'inline'
    script: |
      # setup
      [regex]$pattern = '(\d+.?)+'
      $version        = $pattern.Matches('$(Build.BuildNumber)') | foreach-object {$_.Value}      
      # set value
      Write-Host "##vso[task.setvariable variable=buildVersion]$version"

- task: GitHubRelease@1
  displayName: 'Create GitHub Tag'
  inputs:
    gitHubConnection: 'GitHub connection - Gravity API'
    repositoryName: 'gravity-api/gravity-abstraction'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'userSpecifiedTag'
    tag: 'v$(buildVersion)'
    title: 'Production v$(buildVersion)'
    releaseNotesSource: 'inline'
    changeLogCompareToRelease: 'lastFullRelease'
    changeLogType: 'commitBased'